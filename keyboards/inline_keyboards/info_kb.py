from enum import Enum

from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from .actions_kb import random_num_updated_cb_data


class RandomNumAction(Enum):
    dice = "dice"
    modal = "modal"


class RandomNumCbData(CallbackData, prefix='random_num'):
    action: RandomNumAction


def build_info_kb() -> InlineKeyboardMarkup:
    tg_channel_button = InlineKeyboardButton(
        text="üë®‚Äçüíª –ö–∞–Ω–∞–ª",
        url="https://t.me/S1nRay",
    )
    tg_chat_button = InlineKeyboardButton(
        text="üí¨ –ß–∞—Ç",
        url="https://t.me/S1nRay_Chat",
    )
    bot_source_button = InlineKeyboardButton(
        text="üíæ My GitHub",
        url="https://github.com/Eastwesser",
    )
    button_random_site = InlineKeyboardButton(
        text="Random number message",
        callback_data=random_num_updated_cb_data,
    )
    button_random_num = InlineKeyboardButton(
        text="üé≤ Random number",
        callback_data=RandomNumCbData(action=RandomNumAction.dice).pack(),  # –ø–µ—Ä–µ–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–æ–≤
    )
    random_num_modal_cb_data_bts = InlineKeyboardButton(
        text="üéè Random modal",
        callback_data=RandomNumCbData(action=RandomNumAction.modal).pack(),
    )
    row_tg = [tg_channel_button, tg_chat_button]  # row –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Å—Ç—Ä–æ—á–∫–∞–º–∏, "–∫–∞–Ω–∞–ª" –∏ "—á–∞—Ç"
    row_randoms = [button_random_num, random_num_modal_cb_data_bts]
    rows = [
        row_tg,
        row_randoms,
        [bot_source_button],  # –ø–µ—Ä–µ–¥–∞—ë–º –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
        [button_random_site],
    ]  # rows - —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ—á–µ–∫ –∏–∑ –∫–Ω–æ–ø–æ–∫
    markup = InlineKeyboardMarkup(inline_keyboard=rows)  # —Å–æ–∑–¥–∞–µ–º markup –¥–ª—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    return markup
