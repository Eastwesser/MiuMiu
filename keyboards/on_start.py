# common keyboards
from aiogram.types import (
    KeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButtonPollType,
)
from aiogram.utils.keyboard import ReplyKeyboardBuilder


class ButtonText:
    HELLO = "Hello!"
    WHATS_NEXT = "What's next?"
    BYE = "Good bye!"


def get_on_start_kb() -> ReplyKeyboardMarkup:  # –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º ReplyKeyboardMarkup
    button_hello = KeyboardButton(text=ButtonText.HELLO)
    button_help = KeyboardButton(text=ButtonText.WHATS_NEXT)
    button_bye = KeyboardButton(text=ButtonText.BYE)
    buttons_row_1 = [button_hello, button_help]  # —Å–ø–∏—Å–æ–∫ –∏–∑ –∫–Ω–æ–ø–æ–∫ 1 (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞)
    buttons_row_2 = [button_bye]  # —Å–ø–∏—Å–æ–∫ –∏–∑ –∫–Ω–æ–ø–æ–∫ 2 (–≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞)
    markup_keyboard = ReplyKeyboardMarkup(
        keyboard=[buttons_row_1,
                  buttons_row_2],
        resize_keyboard=True,  # –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–±–∏—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–¥ —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
    )  # —Ä–∞–∑–º–µ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    return markup_keyboard


def get_on_help_kb():
    numbers = [
        "/weather",
        "/converter",
        "/calculator",
        "/food",
        "/sticker_kb",
        "/magnetic_storm",
        "/memes",
        "/start_blockme",
        "/rps",
        "/startblackjack",
    ]
    buttons_row = [KeyboardButton(text=num) for num in numbers]
    #
    # markup = ReplyKeyboardMarkup(
    #     keyboard=[buttons_row],
    #     resize_keyboard=True,  # –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–±–∏—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–¥ —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏, –∞ –ª–∏–º–∏—Ç —Å—Ç—Ä–æ–∫–∏ 12 —Å–∏–º–≤–æ–ª–æ–≤
    # )
    # return markup
    builder = ReplyKeyboardBuilder()
    for num in numbers:
        builder.add(KeyboardButton(text=num))
    # builder.button(text=num) —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ —Å–≤–µ—Ä—Ö—É
    # builder.adjust(3, 3, 4)  # –≤—Å–µ —Å—Ç—Ä–æ—á–∫–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—Ç—Ä–æ–µ–Ω—ã, —á—Ç–æ–±—ã –±—ã–ª–æ –ø–æ 3 —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ (3);
    builder.adjust(3)
    builder.row(buttons_row[3], buttons_row[1])  # —Å—é–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏, —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è –≤ –æ–¥–Ω—É –Ω–æ–≤—É—é —Å—Ç—Ä–æ—á–∫—É
    # builder.add(buttons_row[-1])
    # –∏ 3 –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ, 3 –Ω–∞ –≤—Ç–æ—Ä–æ–π, 4 –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π, –µ—Å–ª–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å —è–≤–Ω–æ (3,3,4)
    return builder.as_markup(resize_keyboard=False)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º builder –∫–∞–∫ markup, —á—Ç–æ–±—ã —É –Ω–∞—Å –±—ã–ª–∞ —Ä–∞–∑–º–µ—Ç–∫–∞


def get_actions_kb() -> ReplyKeyboardMarkup:
    # markup = ReplyKeyboardMarkup(
    #     input_field_placeholder=
    #     keyboard=[]
    # )
    # return markup
    builder = ReplyKeyboardBuilder()
    # builder.add(KeyboardButton(text="Send Location üåç", request_location=True))
    builder.button(
        text="üåç Send Location",
        request_location=True,
    )
    builder.button(
        text="üì± Send My Phone",
        request_contact=True,
    )
    builder.button(
        text="üìä Send Poll",
        request_poll=KeyboardButtonPollType(),
    )
    builder.button(
        text="‚ùì Send Quiz",
        request_poll=KeyboardButtonPollType(type="quiz"),
    )
    builder.button(
        text="‚ùî Regular Quiz",
        request_poll=KeyboardButtonPollType(type="regular"),
    )
    builder.button(
        text=ButtonText.BYE,
    )
    builder.adjust(1)  # –≤—Å–µ –Ω–∞ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É, –ø–æ –æ–¥–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
    return builder.as_markup(
        input_field_placeholder="Actions:",
        resize_keyboard=True,
    )
    # NOTE: resize_keyboard=True –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏
